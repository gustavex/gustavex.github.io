{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-49d483ed8526a5357b59.js","mappings":"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","sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/seo.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Title} = _components;\n  if (!Title) _missingMdxReference(\"Title\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Title, {\n    text: \"Machine Learning\"\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.lekoarts.de/art/3d?utm_source=minimal-blog&utm_medium=Theme\"\n  }, \"3D Art with Cinema4D\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.lekoarts.de/art/photography?utm_source=minimal-blog&utm_medium=Theme\"\n  }, \"Landscape Photography\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"My name is \", React.createElement(_components.a, {\n    href: \"https://gustavex.github.io/about\"\n  }, \"Gustavo\"), \". I'm an engineer by training and like all sorts of nerdy stuff. \", React.createElement(\"br\"), \"\\nCheck my \", React.createElement(_components.a, {\n    href: \"https://gustavex.github.io/blog\"\n  }, \"latest posts\"), \" and \", React.createElement(_components.a, {\n    href: \"https://gustavex.github.io/projects\"\n  }, \"projects\"), \" I've been working on recently.\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/** @jsx jsx */\nimport { jsx, Flex, Box } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\nimport Seo from \"./seo\"\nimport Hero from \"../texts/hero.mdx\"\nimport Bottom from \"../texts/bottom.mdx\"\n\nexport type MBHomepageProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: MBHomepageProps) => {\n    const { basePath, blogPath } = useMinimalBlogConfig()\n    const { siteTitle } = useSiteMetadata()\n\n    return (\n      <Layout>\n        <h1 sx={visuallyHidden}>{siteTitle}</h1>\n        <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n            <Flex sx={{ alignItems: `center`, justifyContent: `space-between` }}>\n                <Box sx={{flexBasis: `70%`}}>\n                     <center>\n                        <img src=\"headshot.jpg\" alt=\"Headshot\" width=\"70%\"/>\n                    </center>\n                </Box>\n                <Box>\n                    <h2 children={`Hi.`} sx={{ fontSize: [4, 5, 6], fontWeight: `bold`, color: `heading` }}/>\n                    <Hero />\n                </Box>\n            </Flex>\n        </section>\n        <Title text=\"Latest Posts\">\n          <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n        </Title>\n        <Listing posts={posts} showTags={false} />\n        <List>\n          <Bottom />\n        </List>\n      </Layout>\n    )\n  }\n  \n  export default Homepage\n  \n  export const Head: HeadFC = () => <Seo />","import { graphql } from \"gatsby\"\nimport HomepageComponent, { Head } from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage, { Head } from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo"],"names":["_createMdxContent","props","_components","Object","assign","ul","li","a","_provideComponents","components","Title","id","component","Error","_missingMdxReference","React","text","href","wrapper","MDXLayout","p","_ref","posts","basePath","blogPath","useMinimalBlogConfig","siteTitle","useSiteMetadata","jsx","Layout","sx","visuallyHidden","mb","fontSize","mt","variant","Flex","alignItems","justifyContent","Box","flexBasis","src","alt","width","children","fontWeight","color","Hero","Link","to","replaceSlashes","Listing","showTags","List","Bottom","Head","Seo","data","allPost","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","t","_t$styles","styles","name","margin","padding","listStyle","post","title","date","ItemTags","className","BlogListItem","description","pathname","image","canonicalUrl","site","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","withPrefix"],"sourceRoot":""}